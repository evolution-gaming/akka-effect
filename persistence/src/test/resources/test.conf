akka {
  log-dead-letters = off
  log-dead-letters-during-shutdown = off
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  persistence {
    journal.plugin = "inmemory-journal"
    snapshot-store.plugin = "inmemory-snapshot-store"
  }
}

fail-on-event-journal {
  class = "com.evolutiongaming.akkaeffect.persistence.FailOnEventJournal"
  plugin-dispatcher = "akka.actor.default-dispatcher"
}

failing-journal {
  class = "akka.persistence.FailingJournal"
  plugin-dispatcher = "akka.actor.default-dispatcher"
}

infinite-journal {
  class = "akka.persistence.InfiniteJournal"
  plugin-dispatcher = "akka.actor.default-dispatcher"
}

delayed-journal {
  class = "akka.persistence.DelayedPersistence"
  plugin-dispatcher = "akka.actor.default-dispatcher"
  replay-filter.mode = off // do not batch replayed messages
}

failing-snapshot {
  class = "akka.persistence.FailingSnapshotter"
  plugin-dispatcher = "akka.actor.default-dispatcher"
}

infinite-snapshot {
  class = "akka.persistence.InfiniteSnapshotter"
  plugin-dispatcher = "akka.actor.default-dispatcher"
}